
Hello_Embedded_World.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000228  2**2
                  CONTENTS, READONLY
  4 .debug_info   000009bb  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000934  00000000  00000000  00000c23  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001ca  00000000  00000000  00001557  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000035a  00000000  00000000  00001721  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
   8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
   c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  10:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  14:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  18:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  1c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  20:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  24:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  28:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  2c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  30:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  34:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  38:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  3c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  40:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  44:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  48:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  4c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  50:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  54:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  58:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  5c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  60:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  64:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  68:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  6c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  70:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  74:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  78:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  7c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  80:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  84:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  88:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  8c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  90:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  94:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  98:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  9c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  a0:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  a4:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  a8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  ac:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  b0:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  b4:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  b8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  bc:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  c0:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  c4:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>
  c8:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d8 e0       	ldi	r29, 0x08	; 8
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_clear_bss>:
  d8:	21 e0       	ldi	r18, 0x01	; 1
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b1 e0       	ldi	r27, 0x01	; 1
  de:	01 c0       	rjmp	.+2      	; 0xe2 <.do_clear_bss_start>

000000e0 <.do_clear_bss_loop>:
  e0:	1d 92       	st	X+, r1

000000e2 <.do_clear_bss_start>:
  e2:	a0 30       	cpi	r26, 0x00	; 0
  e4:	b2 07       	cpc	r27, r18
  e6:	e1 f7       	brne	.-8      	; 0xe0 <.do_clear_bss_loop>
  e8:	0e 94 7a 00 	call	0xf4	; 0xf4 <main>
  ec:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <_exit>

000000f0 <__bad_interrupt>:
  f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f4 <main>:
  f4:	60 e8       	ldi	r22, 0x80	; 128
  f6:	75 e2       	ldi	r23, 0x25	; 37
  f8:	80 ec       	ldi	r24, 0xC0	; 192
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 be 00 	call	0x17c	; 0x17c <UART_init>
 100:	60 e8       	ldi	r22, 0x80	; 128
 102:	75 e2       	ldi	r23, 0x25	; 37
 104:	88 ec       	ldi	r24, 0xC8	; 200
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	0e 94 be 00 	call	0x17c	; 0x17c <UART_init>
 10c:	60 e8       	ldi	r22, 0x80	; 128
 10e:	75 e2       	ldi	r23, 0x25	; 37
 110:	80 ed       	ldi	r24, 0xD0	; 208
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	0e 94 be 00 	call	0x17c	; 0x17c <UART_init>
 118:	65 e5       	ldi	r22, 0x55	; 85
 11a:	80 ec       	ldi	r24, 0xC0	; 192
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	0e 94 ca 00 	call	0x194	; 0x194 <UART_transmit>
 122:	68 e4       	ldi	r22, 0x48	; 72
 124:	88 ec       	ldi	r24, 0xC8	; 200
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 ca 00 	call	0x194	; 0x194 <UART_transmit>
 12c:	65 e6       	ldi	r22, 0x65	; 101
 12e:	88 ec       	ldi	r24, 0xC8	; 200
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 ca 00 	call	0x194	; 0x194 <UART_transmit>
 136:	6c e6       	ldi	r22, 0x6C	; 108
 138:	88 ec       	ldi	r24, 0xC8	; 200
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	0e 94 ca 00 	call	0x194	; 0x194 <UART_transmit>
 140:	6c e6       	ldi	r22, 0x6C	; 108
 142:	88 ec       	ldi	r24, 0xC8	; 200
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 ca 00 	call	0x194	; 0x194 <UART_transmit>
 14a:	6f e6       	ldi	r22, 0x6F	; 111
 14c:	88 ec       	ldi	r24, 0xC8	; 200
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	0e 94 ca 00 	call	0x194	; 0x194 <UART_transmit>
 154:	60 e2       	ldi	r22, 0x20	; 32
 156:	88 ec       	ldi	r24, 0xC8	; 200
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	0e 94 ca 00 	call	0x194	; 0x194 <UART_transmit>
 15e:	65 e5       	ldi	r22, 0x55	; 85
 160:	80 ed       	ldi	r24, 0xD0	; 208
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	0e 94 ca 00 	call	0x194	; 0x194 <UART_transmit>
 168:	2f ef       	ldi	r18, 0xFF	; 255
 16a:	83 ed       	ldi	r24, 0xD3	; 211
 16c:	90 e3       	ldi	r25, 0x30	; 48
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0x7a>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0x84>
 178:	00 00       	nop
 17a:	ce cf       	rjmp	.-100    	; 0x118 <main+0x24>

0000017c <UART_init>:
 17c:	fc 01       	movw	r30, r24
 17e:	15 82       	std	Z+5, r1	; 0x05
 180:	87 e6       	ldi	r24, 0x67	; 103
 182:	84 83       	std	Z+4, r24	; 0x04
 184:	10 82       	st	Z, r1
 186:	12 82       	std	Z+2, r1	; 0x02
 188:	86 e0       	ldi	r24, 0x06	; 6
 18a:	82 83       	std	Z+2, r24	; 0x02
 18c:	11 82       	std	Z+1, r1	; 0x01
 18e:	88 e1       	ldi	r24, 0x18	; 24
 190:	81 83       	std	Z+1, r24	; 0x01
 192:	08 95       	ret

00000194 <UART_transmit>:
 194:	fc 01       	movw	r30, r24
 196:	20 81       	ld	r18, Z
 198:	25 ff       	sbrs	r18, 5
 19a:	fc cf       	rjmp	.-8      	; 0x194 <UART_transmit>
 19c:	66 83       	std	Z+6, r22	; 0x06
 19e:	08 95       	ret

000001a0 <_exit>:
 1a0:	f8 94       	cli

000001a2 <__stop_program>:
 1a2:	ff cf       	rjmp	.-2      	; 0x1a2 <__stop_program>
