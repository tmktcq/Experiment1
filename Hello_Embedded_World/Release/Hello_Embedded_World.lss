
Hello_Embedded_World.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000222  000002b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000222  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  00800104  00800104  000002ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002ec  2**2
                  CONTENTS, READONLY
  5 .debug_info   000009bb  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000934  00000000  00000000  00000ce7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001ca  00000000  00000000  0000161b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000035a  00000000  00000000  000017e5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
   8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
   c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  40:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  4c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  9c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d8 e0       	ldi	r29, 0x08	; 8
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
  d8:	11 e0       	ldi	r17, 0x01	; 1
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b1 e0       	ldi	r27, 0x01	; 1
  de:	e2 e2       	ldi	r30, 0x22	; 34
  e0:	f2 e0       	ldi	r31, 0x02	; 2
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
  e4:	05 90       	lpm	r0, Z+
  e6:	0d 92       	st	X+, r0
  e8:	a4 30       	cpi	r26, 0x04	; 4
  ea:	b1 07       	cpc	r27, r17
  ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
  ee:	21 e0       	ldi	r18, 0x01	; 1
  f0:	a4 e0       	ldi	r26, 0x04	; 4
  f2:	b1 e0       	ldi	r27, 0x01	; 1
  f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
  f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
  f8:	a4 35       	cpi	r26, 0x54	; 84
  fa:	b2 07       	cpc	r27, r18
  fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
  fe:	0e 94 85 00 	call	0x10a	; 0x10a <main>
 102:	0c 94 0f 01 	jmp	0x21e	; 0x21e <_exit>

00000106 <__bad_interrupt>:
 106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <main>:
 10a:	60 e8       	ldi	r22, 0x80	; 128
 10c:	75 e2       	ldi	r23, 0x25	; 37
 10e:	80 ec       	ldi	r24, 0xC0	; 192
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 ca 00 	call	0x194	; 0x194 <UART_init>
 116:	60 e8       	ldi	r22, 0x80	; 128
 118:	75 e2       	ldi	r23, 0x25	; 37
 11a:	88 ec       	ldi	r24, 0xC8	; 200
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	0e 94 ca 00 	call	0x194	; 0x194 <UART_init>
 122:	60 e8       	ldi	r22, 0x80	; 128
 124:	75 e2       	ldi	r23, 0x25	; 37
 126:	80 ed       	ldi	r24, 0xD0	; 208
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	0e 94 ca 00 	call	0x194	; 0x194 <UART_init>
 12e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <export_print_buffer>
 132:	40 e5       	ldi	r20, 0x50	; 80
 134:	50 e0       	ldi	r21, 0x00	; 0
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	71 e0       	ldi	r23, 0x01	; 1
 13a:	88 ec       	ldi	r24, 0xC8	; 200
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <UART_transmit_string>
 142:	88 ec       	ldi	r24, 0xC8	; 200
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <UART_receive>
 14a:	c8 2f       	mov	r28, r24
 14c:	68 e4       	ldi	r22, 0x48	; 72
 14e:	88 ec       	ldi	r24, 0xC8	; 200
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 156:	65 e6       	ldi	r22, 0x65	; 101
 158:	88 ec       	ldi	r24, 0xC8	; 200
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 160:	6c e6       	ldi	r22, 0x6C	; 108
 162:	88 ec       	ldi	r24, 0xC8	; 200
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 16a:	6c e6       	ldi	r22, 0x6C	; 108
 16c:	88 ec       	ldi	r24, 0xC8	; 200
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 174:	6f e6       	ldi	r22, 0x6F	; 111
 176:	88 ec       	ldi	r24, 0xC8	; 200
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 17e:	60 e2       	ldi	r22, 0x20	; 32
 180:	88 ec       	ldi	r24, 0xC8	; 200
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 188:	6c 2f       	mov	r22, r28
 18a:	88 ec       	ldi	r24, 0xC8	; 200
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 192:	d7 cf       	rjmp	.-82     	; 0x142 <main+0x38>

00000194 <UART_init>:
 194:	fc 01       	movw	r30, r24
 196:	15 82       	std	Z+5, r1	; 0x05
 198:	87 e6       	ldi	r24, 0x67	; 103
 19a:	84 83       	std	Z+4, r24	; 0x04
 19c:	10 82       	st	Z, r1
 19e:	12 82       	std	Z+2, r1	; 0x02
 1a0:	86 e0       	ldi	r24, 0x06	; 6
 1a2:	82 83       	std	Z+2, r24	; 0x02
 1a4:	11 82       	std	Z+1, r1	; 0x01
 1a6:	88 e1       	ldi	r24, 0x18	; 24
 1a8:	81 83       	std	Z+1, r24	; 0x01
 1aa:	08 95       	ret

000001ac <UART_transmit>:
 1ac:	fc 01       	movw	r30, r24
 1ae:	20 81       	ld	r18, Z
 1b0:	25 ff       	sbrs	r18, 5
 1b2:	fc cf       	rjmp	.-8      	; 0x1ac <UART_transmit>
 1b4:	66 83       	std	Z+6, r22	; 0x06
 1b6:	08 95       	ret

000001b8 <UART_receive>:
 1b8:	fc 01       	movw	r30, r24
 1ba:	20 81       	ld	r18, Z
 1bc:	27 ff       	sbrs	r18, 7
 1be:	fc cf       	rjmp	.-8      	; 0x1b8 <UART_receive>
 1c0:	86 81       	ldd	r24, Z+6	; 0x06
 1c2:	08 95       	ret

000001c4 <export_print_buffer>:
 1c4:	84 e0       	ldi	r24, 0x04	; 4
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	08 95       	ret

000001ca <UART_transmit_string>:
 1ca:	ef 92       	push	r14
 1cc:	ff 92       	push	r15
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	7c 01       	movw	r14, r24
 1d8:	eb 01       	movw	r28, r22
 1da:	44 23       	and	r20, r20
 1dc:	21 f0       	breq	.+8      	; 0x1e6 <UART_transmit_string+0x1c>
 1de:	8b 01       	movw	r16, r22
 1e0:	04 0f       	add	r16, r20
 1e2:	11 1d       	adc	r17, r1
 1e4:	0d c0       	rjmp	.+26     	; 0x200 <UART_transmit_string+0x36>
 1e6:	68 81       	ld	r22, Y
 1e8:	10 e0       	ldi	r17, 0x00	; 0
 1ea:	66 23       	and	r22, r22
 1ec:	89 f0       	breq	.+34     	; 0x210 <UART_transmit_string+0x46>
 1ee:	c7 01       	movw	r24, r14
 1f0:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 1f4:	1f 5f       	subi	r17, 0xFF	; 255
 1f6:	fe 01       	movw	r30, r28
 1f8:	e1 0f       	add	r30, r17
 1fa:	f1 1d       	adc	r31, r1
 1fc:	60 81       	ld	r22, Z
 1fe:	f5 cf       	rjmp	.-22     	; 0x1ea <UART_transmit_string+0x20>
 200:	c0 17       	cp	r28, r16
 202:	d1 07       	cpc	r29, r17
 204:	29 f0       	breq	.+10     	; 0x210 <UART_transmit_string+0x46>
 206:	69 91       	ld	r22, Y+
 208:	c7 01       	movw	r24, r14
 20a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <UART_transmit>
 20e:	f8 cf       	rjmp	.-16     	; 0x200 <UART_transmit_string+0x36>
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	1f 91       	pop	r17
 216:	0f 91       	pop	r16
 218:	ff 90       	pop	r15
 21a:	ef 90       	pop	r14
 21c:	08 95       	ret

0000021e <_exit>:
 21e:	f8 94       	cli

00000220 <__stop_program>:
 220:	ff cf       	rjmp	.-2      	; 0x220 <__stop_program>
